{"version":3,"file":"static/webpack/static\\development\\pages\\details.js.348d162a73e4c34a82fd.hot-update.js","sources":["webpack:///./pages/details.js"],"sourcesContent":["import React from 'react';\r\nimport {withRouter} from 'next/router';\r\nimport ResponsiveDrawer from '../components/ResponsiveDrawer';\r\nimport NPS_Query from '../components/NPS_Query';\r\nimport {\r\n    Chip,\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Divider,\r\n    ExpansionPanel,\r\n    ExpansionPanelDetails,\r\n    ExpansionPanelSummary,\r\n    Avatar,\r\n    makeStyles} from \"@material-ui/core\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst GOOGLE_API_KEY = \"AIzaSyBQa3TN8TY501aB2H3Tr_m2ptPVNF-EqOM\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    leftcolumn: {\r\n        flexBasis: \"40%\",\r\n        position: \"relative\",\r\n    },\r\n    rightcolumn: {\r\n        flexBasis: \"57.5%\",\r\n    },\r\n    grid: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: theme.spacing(0),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(30),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'left',\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        objectFit: 'cover',\r\n    },\r\n    p: {\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nfunction CenteredGrid({park}){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n            <Grid container spacing={3} className={classes.grid}>\r\n                <Typography color=\"textPrimary\" variant=\"h2\" style={{fontWeight: 'bold'}}>\r\n                    {\"Welcome to \" + park.fullName + \", \" + park.states + \" \"}\r\n                    {(park.designation.length > 0) ? <Chip label={park.designation} className={classes.chip} color=\"primary\"/> : <span/> }\r\n                </Typography>\r\n                <Divider/>\r\n                <div className={classes.leftcolumn}>\r\n                </div>\r\n                <div style={{flexBasis: \"2.5%\"}}/>\r\n                <div className={classes.rightcolumn}>\r\n                    <img className={classes.image} src={`https://maps.googleapis.com/maps/api/staticmap?center=${(park.latLong.length > 0) ? park.latLong.replace(/[^\\d.,-]/g, ''): park.fullName.replace(/\\s/g, '', \"\") + \",\" + park.fullName.replace(/\\s/g, '', \"\") + \",\" + park.states}&zoom=12&size=1300x900&scale=2&maptype=terrain&key=${GOOGLE_API_KEY}`}/>\r\n                </div>\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst Details = withRouter( props => (\r\n    <div style={{\r\n        root:{\r\n            flexGrow: 1,\r\n        },\r\n    }}>\r\n        <ResponsiveDrawer name={props.parks.data[0].fullName + \" Details\"} park={props.router.query.objectId}/>\r\n        <CenteredGrid park={props.parks.data[0]}/>\r\n    </div>\r\n));\r\n\r\nDetails.getInitialProps = async function(context) {\r\n    const {objectId} = context.query;\r\n    const res = await fetch(NPS_Query(\"parks\", objectId));\r\n    const parks = await res.json();\r\n\r\n    console.log(`Fetched ${parks.data[0].fullName}`);\r\n\r\n    return {parks};\r\n};\r\n\r\nexport default Details;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAEA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AA3CA;AAAA;AACA;AA+CA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAPA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AALA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}