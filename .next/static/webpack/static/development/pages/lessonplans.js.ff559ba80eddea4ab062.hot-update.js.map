{"version":3,"file":"static/webpack/static\\development\\pages\\lessonplans.js.ff559ba80eddea4ab062.hot-update.js","sources":["webpack:///./components/ButtonDialog.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles, Typography\r\n} from \"@material-ui/core\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport FlipFrontIcon from '@material-ui/icons/FlipToFront';\r\nimport FlipBackIcon from '@material-ui/icons/FlipToBack';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    column: {\r\n        flexBasis: \"50%\",\r\n    },\r\n    grid: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: theme.spacing(0),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(30),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'left',\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n    },\r\n    p: {\r\n        width: \"100%\",\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction ButtonDialog(props){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState(\"body\");\r\n\r\n    const handleClick = scrollType => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    if(props.multitext != null){\r\n        if(props.multitext.length > 0){\r\n            return (\r\n                <div>\r\n                    <Button onClick={handleClick('body')} variant=\"outlined\" className={classes.button} color=\"inherit\">{props.buttonName}<FlipFrontIcon className={classes.rightIcon}/></Button>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        scroll={scroll}\r\n                    >\r\n                        <DialogTitle>{props.buttonName}</DialogTitle>\r\n                        <DialogContent dividers={false}>\r\n                            <DialogContentText>\r\n                                {props.multitext.map((subj) => (\r\n                                    <Typography variant=\"h5\" color=\"textSecondary\">\r\n                                        {subj}\r\n                                    </Typography>\r\n                                ))}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            {(props.otherurl != null && props.otherurl.length > 0) ? <Button href={props.otherurl} className={classes.button}>{props.other}<LaunchIcon className={classes.rightIcon}/></Button>: <span/>}\r\n                            <Button onClick={handleClose} color=\"primary\" className={classes.button}>Close<FlipBackIcon className={classes.rightIcon}/></Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(<span></span>)\r\n        }\r\n\r\n    }\r\n    else if(props.text.replace(/^\\s+|\\s+$/g, '').length > 0) {\r\n        return (\r\n            <span>\r\n                <Button onClick={handleClick('body')} variant=\"outlined\" className={classes.button} color=\"inherit\">{props.buttonName}<FlipFrontIcon className={classes.rightIcon}/></Button>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    scroll={scroll}\r\n                >\r\n                    <DialogTitle>{props.buttonName}</DialogTitle>\r\n                    <DialogContent dividers={false}>\r\n                        <DialogContentText>\r\n                            {props.text}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {(props.otherurl != null && props.otherurl.length > 0) ? <Button href={props.otherurl} className={classes.button}>{props.other}<LaunchIcon className={classes.rightIcon}/></Button>: <span/>}\r\n                        <Button onClick={handleClose} color=\"primary\" className={classes.button}>Close<FlipBackIcon className={classes.rightIcon}/></Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </span>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <span></span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonDialog;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAEA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAzCA;AAAA;AACA;AA6CA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAGA;AACA;AACA;AACA;;;;A","sourceRoot":""}