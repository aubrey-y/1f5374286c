{"version":3,"file":"static/webpack/static\\development\\pages\\details.js.66ba58bd04e76147dd67.hot-update.js","sources":["webpack:///./components/ListItemLink.js","webpack:///./pages/details.js"],"sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Link from 'next/link';\r\n\r\nfunction ListItemLink(props) {\r\n    const newPage = props.href.toLowerCase().replace(\" \", \"-\");\r\n    return(\r\n        <Link as={`/${props.park}/${newPage}`} href={`/${newPage}?objectId=${props.park}`}/>\r\n        );\r\n}\r\n\r\nexport default ListItemLink;","import React from 'react';\r\nimport {withRouter} from 'next/router';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemLink from '../components/ListItemLink';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertIcon from '../components/SafetyCautionAlertsBlack30';\r\nimport EventsIcon from '../components/CalendarEventsBlack30';\r\nimport LessonIcon from '../components/InterpretiveExhibitBlack30';\r\nimport PlacesIcon from '../components/MapsBlack30';\r\nimport ArticlesIcon from '../components/NewspaperBlack30';\r\nimport PeopleIcon from '../components/StatueBlack30';\r\nimport VisitorCenterIcon from '../components/VisitorCenterBlack30';\r\nimport CampIcon from '../components/CampgroundBlack30';\r\nimport NewsIcon from '../components/PostOfficeBlack30';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Link from 'next/link';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport '../static/default.css';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props){\r\n    const {container} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    function handleDrawerToggle(){\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider/>\r\n            <List>\r\n                {['Alerts', 'Articles', 'Events', 'News Releases'].map((text, index) => (\r\n                    <ListItemLink href={text} park={props.park}>\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index === 0 ? <AlertIcon/>: index === 1 ? <ArticlesIcon/>: index === 2 ? <EventsIcon/>: <NewsIcon/>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                    </ListItemLink>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                {['Campgrounds', 'Visitor Centers'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index === 0 ? <CampIcon/>: <VisitorCenterIcon/>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                {['Lesson Plans', 'People', 'Places'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>\r\n                            {index === 0 ? <LessonIcon/>: index === 1 ? <PeopleIcon/>: <PlacesIcon/>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor: \"#0096db\"}}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"Open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        {props.name}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer}>\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true,\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Details = withRouter( props => (\r\n    <ResponsiveDrawer name=\"placeholder text\" park={props.router.query.objectId}/>\r\n));\r\n\r\n// Details.getInitialProps = async function() {\r\n//     const res = await fetch()\r\n// };\r\n\r\nexport default Details;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AA1BA;AAAA;AACA;AA+BA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AANA;AAaA;AACA;AAAA;AAAA;AAIA;AAAA;AALA;AAWA;AACA;AAAA;AAAA;AAIA;AAAA;AALA;AAYA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AATA;AAgBA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AALA;AAaA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}