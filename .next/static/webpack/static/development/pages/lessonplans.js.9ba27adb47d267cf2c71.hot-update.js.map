{"version":3,"file":"static/webpack/static\\development\\pages\\lessonplans.js.9ba27adb47d267cf2c71.hot-update.js","sources":["webpack:///./components/LessonDialog.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogActions,\r\n    Divider,\r\n    Typography,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport getList from \"./utils/getList\";\r\nimport FlipFrontIcon from '@material-ui/icons/FlipToFront';\r\nimport FlipBackIcon from '@material-ui/icons/FlipToBack';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    singlecolumn: {\r\n        flexBasis: \"100%\",\r\n        position: \"relative\",\r\n    },\r\n    grid: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: theme.spacing(0),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(30),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        float: 'left',\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        objectFit: 'cover',\r\n    },\r\n    p: {\r\n        width: \"100%\",\r\n    },\r\n    maintitle: {\r\n        [theme.breakpoints.only('xs')]:{\r\n            fontSize: \"xx-large\"\r\n        },\r\n        float: \"left\",\r\n    },\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction LessonDialog({state, other}){\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState(\"body\");\r\n\r\n    const handleClick = scrollType => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return(\r\n        <div>\r\n            <Button onClick={handleClick('body')} variant=\"outlined\" className={classes.button} color=\"inherit\">Other Standards<FlipFrontIcon className={classes.rightIcon}/></Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll={scroll}\r\n            >\r\n                <DialogTitle>Other Standards</DialogTitle>\r\n                <DialogContent>\r\n                    {(state.length > 0) ?\r\n                        <div>\r\n                            <Typography variant=\"h4\">\r\n                                State Standards\r\n                            </Typography>\r\n                            <Divider/>\r\n                            {getList(state, \"ccss\").map((std) => (\r\n                                <Typography paragraph>\r\n                                    {std}\r\n                                </Typography>\r\n                            ))}\r\n                            <br/>\r\n                        </div> : <span/>}\r\n                    {(other.length > 0) ?\r\n                        <div>\r\n                            <Typography variant=\"h4\">\r\n                                Other Standards\r\n                            </Typography>\r\n                            <Divider/>\r\n                            {getList(other, \"ccss\").map((std) => (\r\n                                <Typography variant=\"h5\" color=\"textSecondary\">\r\n                                    {std}\r\n                                </Typography>\r\n                            ))}\r\n                        </div> : <span/>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" className={classes.button}>Close<FlipBackIcon className={classes.rightIcon}/></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LessonDialog;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAUA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAEA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AAEA;AADA;AAKA;AACA;AADA;AAnDA;AAAA;AACA;AAuDA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AASA;AAAA;AAIA;AACA;AAAA;AADA;AASA;AAAA;AAIA;AACA;AAAA;AAAA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}