{"version":3,"file":"static/webpack/static\\development\\pages\\details.js.3a6b45e5120786c0bd2b.hot-update.js","sources":["webpack:///./node_modules/@material-ui/icons/Launch.js","webpack:///./pages/details.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n})), 'Launch');\n\nexports.default = _default;","import React from 'react';\r\nimport {withRouter} from 'next/router';\r\nimport ResponsiveDrawer from '../components/ResponsiveDrawer';\r\nimport NPS_Query from '../components/NPS_Query';\r\nimport {\r\n    Chip,\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Divider,\r\n    Hidden,\r\n    Button,\r\n    ExpansionPanel,\r\n    ExpansionPanelDetails,\r\n    ExpansionPanelSummary,\r\n    Avatar,\r\n    makeStyles} from \"@material-ui/core\";\r\nimport fetch from 'isomorphic-unfetch';\r\nimport '../static/default.css';\r\nimport ButtonDialog from \"../components/ButtonDialog\";\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nconst GOOGLE_API_KEY = \"AIzaSyBQa3TN8TY501aB2H3Tr_m2ptPVNF-EqOM\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grid: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: theme.spacing(0),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(30),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        float: 'left',\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        objectFit: 'cover',\r\n    },\r\n    p: {\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nfunction CenteredGrid({park}){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n            <Grid container spacing={3} className={classes.grid}>\r\n                <Typography color=\"textPrimary\" variant=\"h2\" style={{fontWeight: 'bold', paddingBottom: \"15px\", width: \"100%\"}}>\r\n                    {\"Welcome to \" + park.fullName + \", \" + park.states + \" \"}\r\n                    {(park.designation.length > 0) ? <Chip label={park.designation} className={classes.chip} color=\"primary\"/> : <span/> }\r\n                    <Divider/>\r\n                </Typography>\r\n                <div className=\"leftcol\">\r\n                    <Typography variant=\"h5\" paragraph>\r\n                        {park.description}\r\n                    </Typography>\r\n                    <Typography variant=\"h3\" color=\"textPrimary\" style={{fontWeight: 'bold'}}>\r\n                        Weather\r\n                        <Divider/>\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" paragraph>\r\n                        {park.weatherInfo}\r\n                    </Typography>\r\n                    <Hidden smUp>\r\n                        <ButtonDialog buttonName=\"Directions\" text={park.directionsInfo} other=\"Details\" otherurl={park.directionsUrl}/>\r\n                    </Hidden>\r\n                    <Hidden xsDown>\r\n                        <Typography variant=\"h4\" color=\"textPrimary\" style={{fontWeight: 'bold'}}>\r\n                            Directions\r\n                            <Divider/>\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" paragraph>\r\n                            {park.directionsInfo}\r\n                        </Typography>\r\n                        {(park.directionsUrl.length > 0) ? <Button href={park.directionsUrl} variant=\"contained\" color=\"inherit\">Directions <LaunchIcon/></Button> : <span/>}\r\n                    </Hidden>\r\n                </div>\r\n                <div style={{flexBasis: \"2.5%\"}}/>\r\n                <div className=\"rightcol\">\r\n                    <img className={classes.image} src={`https://maps.googleapis.com/maps/api/staticmap?center=${(park.latLong.length > 0) ? park.latLong.replace(/[^\\d.,-]/g, ''): park.fullName.replace(/\\s/g, '', \"\") + \",\" + park.fullName.replace(/\\s/g, '', \"\") + \",\" + park.states}&zoom=12&size=1300x550&scale=2&maptype=terrain&key=${GOOGLE_API_KEY}`}/>\r\n                </div>\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst Details = withRouter( props => (\r\n    <div style={{\r\n        root:{\r\n            flexGrow: 1,\r\n        },\r\n    }}>\r\n        <ResponsiveDrawer name={props.parks.data[0].fullName + \" Details\"} park={props.router.query.objectId}/>\r\n        <CenteredGrid park={props.parks.data[0]}/>\r\n    </div>\r\n));\r\n\r\nDetails.getInitialProps = async function(context) {\r\n    const {objectId} = context.query;\r\n    const res = await fetch(NPS_Query(\"parks\", objectId));\r\n    const parks = await res.json();\r\n\r\n    console.log(`Fetched ${parks.data[0].fullName}`);\r\n\r\n    return {parks};\r\n};\r\n\r\nexport default Details;"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AApCA;AAAA;AACA;AAwsourceRoot":""}