{"version":3,"file":"static/webpack/static\\development\\pages\\alerts.js.7d9f35f4d155e93e17b7.hot-update.js","sources":["webpack:///./pages/alerts.js"],"sourcesContent":["import React from 'react';\r\nimport {withRouter} from 'next/router';\r\nimport ResponsiveDrawer from '../components/ResponsiveDrawer';\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Chip,\r\n    Button,\r\n    Divider,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n} from '@material-ui/core';\r\nimport NPS_Query from '../components/NPS_Query';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n    },\r\n    paper:{\r\n        padding: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grid:{\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingLeft: theme.spacing(0),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(30),\r\n        },\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction CenteredGrid({alerts}){\r\n    const classes = useStyles();\r\n    var states = [];\r\n    for(var i = 0; i < alerts.length; i++){\r\n        const [open, setOpen] = React.useState(false);\r\n        states.push([open, setOpen]);\r\n    }\r\n    // const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState('body');\r\n\r\n    const handleClick = (scrollType, index) => () => {\r\n        states[index][1](true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = (index) => () => {\r\n        states[index][1](false);\r\n    };\r\n\r\n    return(\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>>\r\n            <Grid container spacing={3} className={classes.grid}>\r\n                {alerts.map((alertObj, index) => (\r\n                    <Grid item xs>\r\n                        <Paper className={classes.paper}>\r\n                            <Chip label={alertObj.category} className={classes.chip} color=\"secondary\"/>\r\n                            <Typography color=\"textPrimary\" variant=\"h4\">\r\n                                {alertObj.title}\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <Typography paragraph>\r\n                                {alertObj.description}\r\n                            </Typography>\r\n                            {(alertObj.url.length > 0) ? <Button href={alertObj.url} color=\"primary\">More Information</Button> : <div/>}\r\n                            {/*<Button variant=\"outlined\" size=\"large\" className={classes.button} onClick={handleClick('body', index)}>Learn More</Button>*/}\r\n                            {/*<Dialog*/}\r\n                            {/*    open={states[index][0]}*/}\r\n                            {/*    onClose={handleClose(index)}*/}\r\n                            {/*    scroll={scroll}*/}\r\n                            {/*    aria-labelledby=\"scroll-diialog-title\"*/}\r\n                            {/*>*/}\r\n                            {/*    <DialogTitle id=\"scroll-dialog-title\">{alertObj.title}</DialogTitle>*/}\r\n                            {/*    <DialogContent dividers={false}>*/}\r\n                            {/*        <DialogContentText>*/}\r\n                            {/*            {alertObj.description}*/}\r\n                            {/*        </DialogContentText>*/}\r\n                            {/*    </DialogContent>*/}\r\n                            {/*    <DialogActions>*/}\r\n                            {/*        {(alertObj.url.length > 0) ? <Button href={alertObj.url} color=\"primary\">More Information</Button> : <div/>}*/}\r\n                            {/*        <Button variant=\"contained\" onClick={handleClose(index)} color=\"primary\">*/}\r\n                            {/*            Close*/}\r\n                            {/*        </Button>*/}\r\n                            {/*    </DialogActions>*/}\r\n                            {/*</Dialog>*/}\r\n                        </Paper>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst Alerts = withRouter( props => (\r\n    <div style={{\r\n        root:{\r\n            flexGrow: 1,\r\n        },\r\n    }}>\r\n        <ResponsiveDrawer name={props.parks.data[0].fullName + \" Alerts\"} park={props.router.query.objectId}/>\r\n        <CenteredGrid alerts={props.alerts.data}/>\r\n    </div>\r\n));\r\n\r\nAlerts.getInitialProps = async function(context) {\r\n    const {objectId} = context.query;\r\n    const res = await fetch(NPS_Query(\"parks\", objectId));\r\n    const parks = await res.json();\r\n\r\n    const res2 = await fetch(NPS_Query(\"alerts\", objectId));\r\n    const alerts = await res2.json();\r\n\r\n    console.log(`Fetched ${parks.data[0].fullName}`);\r\n\r\n    return {parks, alerts};\r\n};\r\n\r\nexport default Alerts;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AADA;AAIA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AA1BA;AAAA;AACA;AA8BA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAXA;AAsCA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAPA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AAEA;AARA;AAUA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;;;;A","sourceRoot":""}